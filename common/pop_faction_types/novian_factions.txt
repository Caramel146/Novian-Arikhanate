# #Template
# novian_faction_x = {
#     election_header = "GFX_faction_header_yellow"
#     guiding_ethic = ethic_militarist                    # Decides which ethic pops need to join the faction
#     use_guiding_ethic_as_pop_filter = no                        #this means that the faction will let pops that aren't of the guiding ethic
#     visual_ethic = "imperialist_visual_ethic"           # This shows what ethic icons to display in the faction view
#
#     persistent_faction = yes                     # Persistent factions will keep at least 1 pop in the faction until the faction fails the potential trigger
#     #can_rename = <yes|no>                               # default = yes; Stops factions from being renamable
#     unique = yes
#     #support_multiplier = 1
#
#     resources = {                                       # Default resource generated by the faction
#         category = pop_factions
#         produces = {
#             unity = @faction_base_output
#             mult = @faction_extortion_alloys_ratio
#         }
#     }
#
#     extortion_resource = {                              # Resource generated when the faction is being extorted
#         category = pop_factions
#         produces = {
#             energy = @faction_base_output
#             mult = @faction_extortion_energy_ratio
#         }
#     }
#
#     is_potential = {                                    # Decides if the faction is even in the running of being created
#         is_country_type = novian_arikhanate
#         has_country_flag = novian_faction_x_founded
#     }
#
#     parameters = {                                      # Parameters set here is usually used in demands and actions
#         empire = {
#             type = country
#             valid_objects = {
#                 is_same_value = root
#             }
#         }
#     }
#
#     can_join_pre_triggers = {                           # Fast trigger that decides whether or not we need to evaluate all parameters in CanJoin
#         is_enslaved = no
#         is_being_purged = no
#     }
#
#      can_join_faction = {                                # The full check for if a pop can join the faction
#          is_shackled_robot = no
#          can_think = yes
#          has_pop_flag = novian_faction_x_member
#      }
#
#     attraction = {                                      # How attractive the faction is to join
#         base = 100
#
#         modifier = {
#         }
#     }
#
#     leader = {
#         base = 1
#
#         modifier = {
#             factor = 0
#             NOT = { has_leader_flag = novian_leader_arikhan }
#         }
#     }
#
#     # DEMAND: Faction Pleased (by a GalCom Resolution)
#     inline_script = {
#         script = pop_faction_types/demand_faction_pleased
#         FLAG = galcom_resolution_passed_pro_totalitarian
#     }
#
#     demand = {
#         title = "TOTALITARIAN_AUTOCRACY"
#         unfulfilled_title = "TOTALITARIAN_NO_AUTOCRACY"
#         desc = "TOTALITARIAN_AUTOCRACY_DESC"
#
#         fulfilled_effect = 10
#         unfulfilled_effect = -0.001
#
#         potential = {
#             exists = owner
#             owner = {
#                 is_democratic_authority = no
#             }
#         }
#
#         trigger = {
#             owner = {
#                 OR = {
#                     is_imperial_authority = yes
#                     is_dictatorial_authority = yes
#                 }
#             }
#         }
#     }
#
#     Global Faction Demands for Ruler and Council positions.
#     inline_script = {
#         script = "paragon/global_faction_demands"
#         ETHIC = ethic_xenophile
#         ETHIC_FANATIC = ethic_fanatic_xenophile
#         ETHIC_OPPOSED = ethic_xenophobe
#     }
#
#     on_create = {                                       # Effect that is executed after the faction has been created
#         pop_faction_event = { id = factions.1 }
#     }
#
#     on_destroy = {                                      # Effect that is executed just before the faction is destroyed
#     }
# }